[
["index.html", "R 프로그래밍과 데이터 분석 Chapter 1 Introduction 강의 개요 1.1 Goal 강의 목표 1.2 This course 1.3 Tips 1.4 References books 참고 교제 1.5 References 참고 자료 1.6 Evaluation 평가 세부 항목 1.7 Schedule 강의 계획", " R 프로그래밍과 데이터 분석 한국생명공학연구원 김하성 2020-03-18 Chapter 1 Introduction 강의 개요 장소: 한국생명공학연구원 연구동 세미나실 1213호 (매주수요일 13:00~16:00) 강사: 한국생명공학연구원 바이오합성연구센터 김하성 연락처: 042-860-4372, haseong@kribb.re.kr (생명연 연구동 1143) 강의site: https://greendaygh.github.io/Rstat2020/ 1.1 Goal 강의 목표 이공계열 대학원생의 원활한 실험 설계와 데이터 분석을 위한 범용 프로그램 언어인 R의 사용법과 프로그래밍 기술의 습득이 목표. 특히 Data scientist를 위해 개발된 tidyverse와 ggplot2 패키지 사용법을 위주로 강의와 실습을 진행하며 후반부 대규모 서열 데이터를 이용한 실습을 통해 R의 활용 기술을 학습함 1.2 This course R 사용에 대한 기본 개념과 프로그래밍을 중심으로 필요시 기초 통계지식 강의 실습 데이터로는 교제에서 제공되는 예제 데이터와 생물학 서열 등 대규모 데이터를 사용한 분석 진행 모든 강의 시간 실습을 위한 개인 노트북 지참 필수 강의 자료는 강의 웹사이트에 수업 전 업데이트됨 상황에 따라 강의 일정이 조정될 수 있음 과제물은 필요에 따라 수업 후 제공되며 다음 수업 전까지 메일로 제출 1.3 Tips 눈으로 이해하지 않고 스스로 실습 필수 각 명령줄이 어떻게/왜 작동하는지 이해하기 인터넷 검색을 통한 다른사람의 코드를 적극적으로 이해하고 적용 필요 1.4 References books 참고 교제 Using R for Introductory Statistics by John Verzani Free version of 1st Edition https://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf http://cbb.sjtu.edu.cn/~mywu/bi217/usingR.pdf Second edition https://www.crcpress.com/Using-R-for-Introductory-Statistics-Second-Edition/Verzani/p/book/9781466590731 R for Data Science (https://r4ds.had.co.nz, https://github.com/hadley) Bioinformatics Data Skills by Vince Buffalo (http://2.droppdf.com/files/5aTvl/bioinformatics-data-skills.pdf) First Course in Statistical Programming with R by Braun and Murdoch (https://www.cambridge.org/core/books/first-course-in-statistical-programming-with-r/C9F088122AB40517B07FA77F2F0FDE2F) Introductory Statistics with R by Dalgaard (http://www.academia.dk/BiologiskAntropologi/Epidemiologi/PDF/Introductory_Statistics_with_R__2nd_ed.pdf) Modern Applied Statistics with S by Venables and Ripley (http://www.bagualu.net/wordpress/wp-content/uploads/2015/10/Modern_Applied_Statistics_With_S.pdf) 일반통계학 (영지문화사, 김우철 외) 1.5 References 참고 자료 https://resources.rstudio.com/ http://shiny.rstudio.com/tutorial/ R 홈페이지 https://www.r-project.org/ Rstudio 홈페이지 https://www.rstudio.com/ Packages for biologists https://www.bioconductor.org/ R 기본 문서들 (소개, 사용, 설치, 운영) https://cran.r-project.org/manuals.html R ebooks https://bookdown.org/ Cheat Sheets https://www.rstudio.com/resources/cheatsheets/ 1.6 Evaluation 평가 세부 항목 출석 50% / 과제 50% / 80점 이상 S, 80점 미만 U 부여 1.7 Schedule 강의 계획 1주차 - Introduction and installation of R/Rstudio 2주차 - R language basics I – Interface, operations, packages, help, NULL, NA, and NaN 3주차 - R language basics II - data type and structure 4주차 - R language basics III – if, for, while 5주차 - R programming – Maze Robot (function, matrix) I 6주차 - R programming – Maze Robot (function, matrix) II 7주차 - Data manipulation I - read, write, rbind, cbind, split, subset 8주차 - Data manipulation II - dplyr, apply, reshape 9주차 - Visualizing data in R I – plot, hist 10주차 - Visualizing data in R II – ggplot2 11주차 - Visualizing data in R III – ggplot2 12주차 - Shiny for interactive applications in R I 13주차 - Shiny for interactive applications in R II 14주차 - Data analysis #1 15주차 - Data analysis #2 16주차 - Data analysis #3 "],
["r-basics.html", "Chapter 2 R basics 2.1 What is R / Rstudio 2.2 R / Rstudio installation 2.3 Rstudio interface 2.4 Keyboard shortcuts 2.5 Set working directory 2.6 Hello world 2.7 Help 2.8 RStudio workspace 2.9 R packages 2.10 Data sets 2.11 Cheatsheet", " Chapter 2 R basics 2.1 What is R / Rstudio R은 통계나 생물통계, 유전학을 연구하는 사람들 사이에서 널리 사용되는 오픈소스 프로그래밍 언어 입니다. Bell Lab에서 개발한 S 언어에서 유래했으며 엄청나게 많은 라이브러리 (다른 사람들이 만들어 놓은 코드)가 있어서 쉽게 가져다 사용할 수 있습니다. R은 복잡한 수식이나 통계 알고리즘을 간단히 구현하고 사용할 수 있으며 C, C++, Python 등 다른 언어들과의 병행 사용도 가능합니다. 2019년 top five language에 랭크 되었으며 이는 빅데이터 증가에 따라 인기가 높아진 것으로 볼 수 있습니다 (참고로 2018년에는 7위). Despite being a much more specialized language than the others, it’s maintained its popularity in recent years due to the world being awash in an ever-growing pile of big data. https://spectrum.ieee.org/computing/software/the-top-programming-languages-2019 R은 데이터를 통계분석에 널리 사용되는데 이는 데이터를 눈으로 확인하기 위한 visualization 이나 벡터 연산 등의 강력한 기능 때문에 점점 더 많은 사람들이 사용하고 있습니다. 기존에는 속도나 확장성이 다른 언어들에 비해 단점으로 지적되었으나 R 언어의 계속적인 개발과 업데이트로 이러한 단점들이 빠르게 보완되고 있습니다. R 사용을 위해서는 R 언어의 코어 프로그램을 먼저 설치하고 그 다음 R 언어용 IDE인 RStudio 설치가 필요합니다. 2.2 R / Rstudio installation R 사이트에 접속 후 (https://www.r-project.org/) 좌측 메뉴 상단에 위치한 CRAN 클릭. 미러 사이트 목록에서 Korea의 아무 사이트나 들어감 Download R for Windows를 클릭 후 base 링크 들어가서 Download R 3.6.3 for Windows 링크로 실행 프로그램 다운로드 (2020.3 현재 R 버전은 3.6.3). 로컬 컴퓨터에 Download 된 R-3.6.3-win.exe 를 실행하고 설치 프로그램의 지시에 따라 R 언어 소프트웨어 설치를 완료합니다. Rstudio는 R 언어를 위한 오픈소스 기반 통합개발환경(IDE)으로 R 프로그래밍을 위한 편리한 기능들을 제공해 줍니다. 다음 사이트에 접속 (https://www.rstudio.com/), 상단의 Products &gt; RStudio 클릭 RStudio Desktop 선택 Download RStudio Desktop 클릭 RStudio Desktop Free 버전의 Download를 선택하고 Download RStudio for Windows (2020.03현재 version 1.2.5033) 클릭, 다운로드. 로컬 컴퓨터에 다운로드된 RStudio-1.2.5033.exe를 실행하고 설치 가이드에 따라 설치 완료합니다. 2.3 Rstudio interface 아래 그림의 좌측 상단의 공간은 코드편집창, 좌측 하단은 콘솔창 입니다. 2.4 Keyboard shortcuts 참고사이트 https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts Tools –&gt; Keyboard shortcut Quick Reference (Alt + Shift + K) 코드편집창 이동 (Ctrl+1) 콘솔창 이동(Ctrl+2) 한 줄 실행 (Ctrl+Enter) 주석처리 (Ctrl + Shift + C) 또는 #으로 시작하는 라인 실습 코드편집창에서 다음 입력 단축키 Ctrl + enter로 코드 실행 단축키 Ctrl + 2로 커서 콘솔창으로 이동 x값 x+y값 확인 단축키 Ctrl + 1로 코드편집창 이동 단축키 Ctrl + Shift + C 사용 # x &lt;- 10 # y &lt;- 20 2.5 Set working directory 시작 전 항상 작업 디렉토리 설정. 예를 들어 c: 아래 새로운 디렉토리 rprog2020 을 만들고 작업공간으로 설정 getwd() dir() setwd(&quot;C:\\\\rprog2020&quot;) getwd() dir() 또는 아래와 같이 RStudio 메뉴 에서 설정 2.6 Hello world mystring &lt;- &quot;Hello \\n world!&quot; cat(mystring) print(mystring) 2.7 Help R의 장점 중 하나로 방대한 양의 도움말 페이지가 제공됩니다. ? 명령을 사용하면 되며 구글이나 웹에서도 도움을 얻을 수 있습니다. ?cat ?print ?mean help(&quot;mean&quot;) example(&quot;mean&quot;) help.search(&quot;mean&quot;) help(package=&quot;MASS&quot;) 2.8 RStudio workspace 2.9 R packages R은 “package”라 불리우는 다양한 함수 라이브러리를 사용할 수 있습니다. 예를 들어 sum() 이나 sd()와 같은 함수는 stats이라는 패키지에서 구현된 함수 입니다. 이러한 패키지는 인터넷의 repository에서 구할 수 있으며 대표적으로 The Comprehensive R Archive Network (CRAN) http://cran.r-project.org/web/views/ 와 생물학자를 위한 Bioconductor specialised in genomics http://www.bioconductor.org/packages/release/BiocViews.html#___Software 가 있습니다. 이러한 패키지의 설치는 아래와 같이 RStudio를 이용하거나 콘솔창에서 install.packages() 함수를 이용할 수 있습니다. UsingR package installation 패키지를 설치하고 사용하기 위해서는 library() 함수를 사용해서 미리 loading 해 두어야 합니다. 한 번 로딩으로 작업 세션이 끝날때까지 관련된 함수를 사용할 수 있으나 R 세션이나 RStudio를 재시작 할 경우 다시 로딩해야 사용할 수 있습니다. library(UsingR) R 설치 디렉토리 R 패키지 설치 디렉토리 .libPaths() path.package() 2.10 Data sets 대부분의 패키지는 함수와 함께 관련된 도움말, 예제, 그리고 데이터셋을 같이 제공해 줍니다. library() 함수를 사용할 때 자동으로 같이 로딩이 되며 data() 함수를 사용해서 사용자 작업공간에 복사본을 만들어서 사용할 수 있습니다. head(rivers) length(rivers) class(rivers) data(rivers) data(package=&quot;UsingR&quot;) library(HistData) head(Cavendish) str(Cavendish) head(Cavendish$density2) data(package=&quot;HistData&quot;) 2.11 Cheatsheet "],
["r-programming-basics.html", "Chapter 3 R programming basics 3.1 Terminology 3.2 R console script 3.3 What is a programming language 3.4 Variables and values 3.5 Variable type of (storage) mode 3.6 Variable - Vectors 3.7 Functions 3.8 Vectorized functions 3.9 Exercise 3-1", " Chapter 3 R programming basics 3.1 Terminology Session: R 언어 실행 환경 Console: 명령어 입력하는 창 Code: R 프로그래밍 변수/제어문 모음 Objects (개체, variable): 데이터(값, value)가 저장되는 장소 Object (variable) types: Vectors: 값들의 모임 combine function c() EX: c(6, 11, 13, 31, 90, 92) Factors: 범주형 데이터 저장 장소 Data frames: 2D matrix 형태 데이터 자장 장소 Data (value) types: Integers, doubles/numerics, logicals, and characters. Conditionals (조건, 제어): if, ==, &amp; (AND), | (OR) Ex: (2 + 1 == 3) &amp; (2 + 1 == 4) for, while: 반복 수 Functions (함수, commands): 특정 일 수행, 함수이름 - 입력값 (arguments) - 출력값 (output) 으로 구성 3.2 R console script 콘솔에서 바로 계산을 수행할 수 있습니다. 참고로 이전에 수행한 명령은 콘솔에 커서가 있는 상태에서 위 아래 화살표를 누르면 볼 수 있고 엔터를 눌러 재사용 할 수 있습니다. ;을 사용하면 두 개의 명령을 동시에 수행할 수 있습니다. \\[ 2 + 2 \\] \\[ ((2 - 1)^2 + (1 - 3)^2)^{1/2} \\] 2 + 2 ((2 – 1)^2 + (1 – 3)^2 )^(1/2) 2 + 2; 2 - 2 3.3 What is a programming language 3.4 Variables and values R is a programming language Assignment operator ( &lt;- OR = ) Valid object name &lt;- value 단축키: Alt + - (the minus sign) 내장 변수 Built-in variables x &lt;- 2 y &lt;- x^2 – 2*x + 1 y x &lt;- &quot;two&quot; some_data &lt;- 9.8 pi 변수이름 작명법 Characters (letters), numbers, “_”, “.” A and a are different symbols Names are effectively unlimited in length i_use_snake_case &lt;- 1 otherPeopleUseCamelCase &lt;- 2 some.people.use.periods &lt;- 3 And_aFew.People_RENOUNCEconvention &lt;- 4 자동 완성 기능 (Tab completion) in RStudio 3.5 Variable type of (storage) mode 3.6 Variable - Vectors Combine function c(): Concatenating elements end to end x &lt;- c(10.4, 5.6, 3.1, 6.4, 21.7) y &lt;- c(&quot;X1&quot;, &quot;Y2&quot;, &quot;X3&quot;, &quot;Y4&quot;) i &lt;- 1:3 x[i] 인덱싱: Subsets of the elements of a vector x[1] x[1:3] x[c(1,2,4)] y[3] 3.7 Functions 함수(Function)는 프로그래밍 과정에서 사용자가 필요로하는 기능을 수행하는 명령어를 말하며 다음과 같은 포멧으로 함수를 구현할 수 있습니다. myfunction.name &lt;- function(para1, para2, ... ){ statements return(object) } 예를 들어 다음과 같은 my_sine 함수를 만들 수 있으며 x는 parameter (매개변수)이고 y는 반환값을 저장하는 지역변수 입니다. my_sine &lt;- function(x){ y &lt;- sin(x) return(y) } 만들어진 함수는 다음과 같이 사용할 수 있습니다. 여기서 함수로 전달되는 값 pi는 argument (전달인자) 라고 합니다. 전달인자는 함수에서 정의된 매개변수의 갯수와 같은 수의 전달인자를 입력해 주어야 합니다. my_sine(pi) Terminology function name: my_sine parameter: x argument: pi return value: y 다음 코드를 보면 전역변수 x, y는 지역변수 x, y와 독립적으로 사용됨을 알 수 있습니다. my_half &lt;- function(x){ y &lt;- x/2 cat(&quot;local variable x:&quot;, x, &quot;\\n&quot;) cat(&quot;local variable y:&quot;, y, &quot;\\n&quot;) return(y) } y &lt;- 100 x &lt;- 20 cat(&quot;Global variable x:&quot;, x, &quot;\\n&quot;) cat(&quot;Global variable y:&quot;, y, &quot;\\n&quot;) my_half(5) log, sin등의 함수들은 Built-in function으로 같은 이름의 함수를 만들지 안도록 주의합니다. x &lt;- pi sin(x) sqrt(x) log(x) log(x, 10) x &lt;- c(10, 20, 30) x + x mean(x) sum(x)/length(x) 3.8 Vectorized functions x &lt;- c(10, 20, 30) x + x sqrt(x) sin(x) log(x) x-mean(x) 3.9 Exercise 3-1 다음은 한 다이어트 프로그램의 수행 전 후의 다섯 명의 몸무게이다. 각각을 before 와 after 이름의 변수에 저장 후 몸무게 값의 변화량을 계산하시오. before값들의 평균을 구하시오 (mean() 함수 사용) my_mean 이라는 이름의 함수로 평균을 구하는 코드를 작성 하시오 (빌트인 함수 사용하지 않음) 함수이름: my_mean parameter: x return 값: y (x[1]+x[2]+x[3]+x[4]+x[5])/5 빌트인 함수 sum()과 length()를 이용해 동일한 기능을 하는 함수를 작성하시오 함수이름 my_mean2 sum(), length() 사용 "]
]
